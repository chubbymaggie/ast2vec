from pyspark import Row


def readonly(_dict: dict):
    return frozenset(_dict.items())


dataset = [
    {"d": "1", "t": "1", "v": 3},
    {"d": "1", "t": "2", "v": 2},
    {"d": "1", "t": "3", "v": 1},
    {"d": "2", "t": "1", "v": 4},
    {"d": "2", "t": "2", "v": 5},
    {"d": "3", "t": "1", "v": 6},
    {"d": "4", "t": "1", "v": 4},
    {"d": "4", "t": "2", "v": 3},
    {"d": "4", "t": "3", "v": 2},
    {"d": "4", "t": "4", "v": 1},
] * 10

datasets = [{"uast": [0, 1, 2],
             "content": ["method_base", "QueryBuilder", "resolvedFiler"],
             "file": [0, 1, 2],
             "document": [0, 1, 2],
             "lang": ["Python", "Scala", "Go"], },
            {"uast": [0, 1, 2],
             "content": ["method_base", "QueryBuilder", "resolvedFiler"],
             "file": [0, 1, 2],
             "document": [0, 0, 0],
             "lang": ["Python", "Scala", "Go"], },
            {"uast": [0, 1, 2, 3, 4, 5],
             "content": ["method_base", "QueryBuilder", "resolvedFiler",
                         "Flag", "MinhashCuda", "baseConf"],
             "file": [0, 1, 2, 3, 4, 5],
             "document": [0, 1, 2, 3, 4, 5],
             "lang": ["Python", "Scala", "Go", "Java", "C++", "JavaScript"], },
            {"uast": [0, 1, 2, 3, 4, 5],
             "content": ["method_base", "QueryBuilder", "resolvedFiler",
                         "Flag", "MinhashCuda", "baseConf"],
             "file": [0, 1, 2, 3, 4, 5],
             "document": [0, 0, 0, 0, 0, 0],
             "lang": ["Python", "Scala", "Go", "Java", "C++", "JavaScript"], },
            {"uast": [0, 1, 2, 3, 4, 5],
             "content": ["method_base", "QueryBuilder", "resolvedFiler",
                         "Flag", "MinhashCuda", "baseConf"],
             "file": [0, 1, 2, 3, 4, 5],
             "document": [0, 0, 0, 1, 1, 1],
             "lang": ["Python", "Scala", "Go", "Java", "C++", "JavaScript"], },
            ]

ids_result = [{Row(token="method_base", token_split="method base"),
               Row(token="QueryBuilder", token_split="query builder"),
               Row(token="resolvedFiler", token_split="resolved filer"),
               },
              {Row(token="method_base", token_split="method base"),
               Row(token="QueryBuilder", token_split="query builder"),
               Row(token="resolvedFiler", token_split="resolved filer"),
               },
              {Row(token="method_base", token_split="method base"),
               Row(token="QueryBuilder", token_split="query builder"),
               Row(token="resolvedFiler", token_split="resolved filer"),
               Row(token="Flag", token_split="flag"),
               Row(token="MinhashCuda", token_split="minhash cuda"),
               Row(token="baseConf", token_split="base conf"),
               },
              {Row(token="method_base", token_split="method base"),
               Row(token="QueryBuilder", token_split="query builder"),
               Row(token="resolvedFiler", token_split="resolved filer"),
               Row(token="Flag", token_split="flag"),
               Row(token="MinhashCuda", token_split="minhash cuda"),
               Row(token="baseConf", token_split="base conf"),
               },
              {Row(token="method_base", token_split="method base"),
               Row(token="QueryBuilder", token_split="query builder"),
               Row(token="resolvedFiler", token_split="resolved filer"),
               Row(token="Flag", token_split="flag"),
               Row(token="MinhashCuda", token_split="minhash cuda"),
               Row(token="baseConf", token_split="base conf"),
               },
              ]

ids_split_result = [{Row(token="method_base", token_split="method base"),
                     Row(token="QueryBuilder", token_split="query builder"),
                     Row(token="resolvedFiler", token_split="resolved filer"),
                     },
                    {Row(token="method_base", token_split="method base"),
                     Row(token="QueryBuilder", token_split="query builder"),
                     Row(token="resolvedFiler", token_split="resolved filer"),
                     },
                    {Row(token="method_base", token_split="method base"),
                     Row(token="QueryBuilder", token_split="query builder"),
                     Row(token="resolvedFiler", token_split="resolved filer"),
                     Row(token="MinhashCuda", token_split="minhash cuda"),
                     Row(token="baseConf", token_split="base conf"),
                     },
                    {Row(token="method_base", token_split="method base"),
                     Row(token="QueryBuilder", token_split="query builder"),
                     Row(token="resolvedFiler", token_split="resolved filer"),
                     Row(token="MinhashCuda", token_split="minhash cuda"),
                     Row(token="baseConf", token_split="base conf"),
                     },
                    {Row(token="method_base", token_split="method base"),
                     Row(token="QueryBuilder", token_split="query builder"),
                     Row(token="resolvedFiler", token_split="resolved filer"),
                     Row(token="MinhashCuda", token_split="minhash cuda"),
                     Row(token="baseConf", token_split="base conf"),
                     },
                    ]

ids_split_idfreq_result = [{Row(num_files=1, num_occ=1, num_repos=1,
                                token="method_base", token_split="method base"),
                            Row(num_files=1, num_occ=1, num_repos=1,
                                token="QueryBuilder", token_split="query builder"),
                            Row(num_files=1, num_occ=1, num_repos=1,
                                token="resolvedFiler", token_split="resolved filer"),
                            },
                           {Row(num_files=1, num_occ=1, num_repos=1,
                                token="method_base", token_split="method base"),
                            Row(num_files=1, num_occ=1, num_repos=1,
                                token="QueryBuilder", token_split="query builder"),
                            Row(num_files=1, num_occ=1, num_repos=1,
                                token="resolvedFiler", token_split="resolved filer"),
                            },
                           {Row(num_files=1, num_occ=1, num_repos=1,
                                token="method_base", token_split="method base"),
                            Row(num_files=1, num_occ=1, num_repos=1,
                                token="QueryBuilder", token_split="query builder"),
                            Row(num_files=1, num_occ=1, num_repos=1,
                                token="resolvedFiler", token_split="resolved filer"),
                            Row(num_files=1, num_occ=1, num_repos=1,
                                token="MinhashCuda", token_split="minhash cuda"),
                            Row(num_files=1, num_occ=1, num_repos=1,
                                token="baseConf", token_split="base conf"),
                            },
                           {Row(num_files=1, num_occ=1, num_repos=1,
                                token="method_base", token_split="method base"),
                            Row(num_files=1, num_occ=1, num_repos=1,
                                token="QueryBuilder", token_split="query builder"),
                            Row(num_files=1, num_occ=1, num_repos=1,
                                token="resolvedFiler", token_split="resolved filer"),
                            Row(num_files=1, num_occ=1, num_repos=1,
                                token="MinhashCuda", token_split="minhash cuda"),
                            Row(num_files=1, num_occ=1, num_repos=1,
                                token="baseConf", token_split="base conf"),
                            },
                           {Row(num_files=1, num_occ=1, num_repos=1,
                                token="method_base", token_split="method base"),
                            Row(num_files=1, num_occ=1, num_repos=1,
                                token="QueryBuilder", token_split="query builder"),
                            Row(num_files=1, num_occ=1, num_repos=1,
                                token="resolvedFiler", token_split="resolved filer"),
                            Row(num_files=1, num_occ=1, num_repos=1,
                                token="MinhashCuda", token_split="minhash cuda"),
                            Row(num_files=1, num_occ=1, num_repos=1,
                                token="baseConf", token_split="base conf"),
                            },
                           ]
term_freq_result = {
    readonly({"d": "1", "t": "1", "v": 30}),
    readonly({"d": "1", "t": "2", "v": 20}),
    readonly({"d": "1", "t": "3", "v": 10}),
    readonly({"d": "2", "t": "1", "v": 40}),
    readonly({"d": "2", "t": "2", "v": 50}),
    readonly({"d": "3", "t": "1", "v": 60}),
    readonly({"d": "4", "t": "1", "v": 40}),
    readonly({"d": "4", "t": "2", "v": 30}),
    readonly({"d": "4", "t": "3", "v": 20}),
    readonly({"d": "4", "t": "4", "v": 10}),
}

doc_freq_result = {
    "1": 4,
    "2": 3,
    "3": 2,
    "4": 1,
}
